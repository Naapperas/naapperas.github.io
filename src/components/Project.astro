---
import type { CollectionEntry } from "astro:content";

interface Props {
    project: CollectionEntry<"project">["data"];
}

const { project } = Astro.props;
---

<article class="project-card">
    <a href={project.upstreamLink}></a>
    <img class="preview-image" src={project.previewImage} alt=`Preview image for ${project.name}`>
    <header>
        <h2>{project.name}</h2>
        <p>{project.description}</p>
    </header>
    {
        project.otherMembers ? (
            <section class="other-members">
                <h3>Other members:</h3>
                <ul>
                    {project.otherMembers.map((member) => (
                        <li>
                            <a href={member.githubUrl}>{member.name}</a>
                        </li>
                    ))}
                </ul>
            </section>
        ) : null
    }
</article>
<style>
    :root {
        --card-elevation: 0;
        --member-link-elevation: 5;
    }

    .project-card {
        display: flex;
        flex-direction: column;
        position: relative;
        justify-content: space-between;
        padding: 1rem;
        max-width: 75%;
        margin: 1rem auto;
        border-radius: 0.5rem;
        background-color: var(--color-bg);
        box-shadow: 0 0 0.5rem var(--color-shadow);
        transition: box-shadow 0.2s ease-in-out;
    }

    .project-card > a {
        border: none;
        outline: none;
    }

    .project-card > a::after {
        /* Do this in order to have a link on the project itself and then support other kinds of links */
        content: "";
        position: absolute;
        display: block;
        inset: 0;
        z-index: var(--card-elevation);
    }

    .other-members {
    }

    .other-members > ul {
        padding-left: 2em;
    }

    .other-members ul li a {
        position: relative;
        z-index: var(--member-link-elevation);
    }
</style>
