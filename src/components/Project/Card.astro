---
import type { CollectionEntry } from "astro:content";

import ChipList from "../Chip/List.astro";

interface Props {
  project: CollectionEntry<"project">;
}

/**
 * Parses a project's tech stack into a list of techs to be displayed in the preview card.
 *
 * @param techs the tech stack of the project
 * @returns a list of techs to be displayed in the preview card
 */
const parsePreviewTechs = (
  techs: CollectionEntry<"project">["data"]["techStack"]
): string[] => {
  if (!techs) {
    return [];
  }

  // TODO: maybe have a separate type for techs ???
  let previewTechs: string[] = [];

  if (Array.isArray(techs)) {
    previewTechs = previewTechs.concat(techs);
  } else {
    previewTechs = previewTechs.concat(techs.backend, techs.frontend);
  }

  return previewTechs;
};

const { project: projectMetadata } = Astro.props;

const project = projectMetadata.data;
---

<article id=`project-card-${projectMetadata.slug}` class="project-card">
  <a href=`/projects/${projectMetadata.slug}`>
    <img
      class="preview-image"
      height="204.1px"
      src={project.previewImage}
      alt=`Preview image for ${project.name}`
    />
    <section class="project-data">
      <header>
        <h2>{project.name}</h2>
        {project.shortDescription ? <p>{project.shortDescription}</p> : null}
      </header>
      <ChipList labels={parsePreviewTechs(project.techStack)} />
    </section>
  </a>
</article>
