---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import Layout from "../../layouts/Content.astro";

import TechStack from "../../components/Project/TechStack/index.astro";
import Members from "../../components/Project/Members.astro";
import AcademicInfo from "../../components/Project/AcademicInfo.astro";

export const getStaticPaths = (async () => {
  const projects = await getCollection("project");

  return projects.map((entry) => ({
    params: { project: entry.slug },
    props: { entry },
  }));
}) satisfies GetStaticPaths;

export type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry: projectMetada } = Astro.props;

const project = projectMetada.data;
---

<Layout title={`Project - ${project.name}`} bgColor="bg-color-background-light">
  {
    project.previewImage ? (
      <Image class="" src={project.previewImage} alt={project.name} />
    ) : (
      <p>Boas</p>
    )
  }
  <section class="px-10n">
    <header class="">
      <h1 class="">{project.name}</h1>
      <p class="">{project.description}</p>
    </header>
    {
      project.academicData || project.otherMembers ? (
        <section class="flex justify-around">
          {project.academicData ? (
            <AcademicInfo academicData={project.academicData} />
          ) : null}
          {project.otherMembers ? (
            <Members members={project.otherMembers} />
          ) : null}
        </section>
      ) : null
    }

    {project.techStack ? <TechStack techStack={project.techStack} /> : null}
  </section>
</Layout>
