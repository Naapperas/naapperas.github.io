---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "../../layouts/Base.astro";

import TechStack from "../../components/Project/TechStack/index.astro";

export const getStaticPaths = (async () => {
    const projects = await getCollection("project");

    return projects.map((entry) => ({
        params: { project: entry.slug },
        props: { entry },
    }));
}) satisfies GetStaticPaths;

export type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry: projectMetada } = Astro.props;

const mapSemesterOrdinal = (
    semester: Required<
        CollectionEntry<"project">["data"]
    >["academicData"]["course"]["semester"]
): string => {
    switch (semester) {
        case 1:
            return "1st";
        case 2:
            return "2nd";
    }
};

const project = projectMetada.data;
---

<Layout title={`Project - ${project.name}`}>
    <main class="center">
        <img
            class="banner"
            src={project.previewImage}
            alt=`Preview image for ${project.name}`
        />
        <section class="content">
            <header class="project-info">
                <h1>{project.name}</h1>
                <p>{project.description}</p>
            </header>
            {
                project.academicData ? (
                    <section class="academic-data">
                        <h2>Academic info</h2>
                        <div>
                            <p class="course-designation">
                                Course: {project.academicData.course.fullName}{" "}
                                <span class="course-code">
                                    ({project.academicData.course.code})
                                </span>
                            </p>
                            <p class="course-semester">
                                {project.academicData.course.year} -{" "}
                                {`${mapSemesterOrdinal(
                                    project.academicData.course.semester
                                )} semester`}
                            </p>
                            {project.academicData.marks ? (
                                <p class="project-grade">
                                    Grade: {project.academicData.marks}/20
                                </p>
                            ) : null}
                        </div>
                    </section>
                ) : null
            }
            {
                project.otherMembers ? (
                    <section class="other-members">
                        <h2>Other people that developed this project:</h2>
                        <ul>
                            {project.otherMembers.map(({ githubUrl, name }) => (
                                <li>
                                    <svg
                                        xmlns="http://www.w3.org/2000/svg"
                                        width="16"
                                        height="16"
                                        fill="currentColor"
                                        class="bi bi-github"
                                        viewBox="0 0 16 16"
                                    >
                                        <path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z" />
                                    </svg>
                                    <a href={githubUrl}>{name}</a>
                                </li>
                            ))}
                        </ul>
                    </section>
                ) : null
            }
            {
                project.techStack ? (
                    <TechStack techStack={project.techStack} />
                ) : null
            }
        </section>
    </main>
</Layout>

<style>
    .banner {
        max-width: 85%;
        margin: auto;
    }

    .center {
        padding: 1.5rem;

        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .content {
        max-width: 100ch;
    }

    .content .project-info {
        margin-bottom: 1rem;
    }

    .content .project-info h1 {
        font-size: 3rem;
        font-weight: 700;
    }

    .other-members li {
        list-style: none;
    }
</style>
